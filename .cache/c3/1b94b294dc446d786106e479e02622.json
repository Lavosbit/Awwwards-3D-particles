{"id":"shader/vertexShader.glsl","dependencies":[{"name":"/Users/jacob/Documents/vs code/courses/awwwards/3D Particles/package.json","includedInParent":true,"mtime":1645324589260}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// attribute vec3 position;\\nattribute vec3 aRandom;\\n\\nvarying vec3 vPosition;\\n\\nuniform float uTime;\\nuniform float uScale;\\n\\nvoid main() {\\n    vPosition = position;\\n\\n    float time = uTime * 4.0;\\n\\n    vec3 pos = position;\\n    pos.x += sin(time * aRandom.x) * 0.01;\\n    pos.y += cos(time * aRandom.y) * 0.01;\\n    pos.z += cos(time * aRandom.z) * 0.01;\\n\\n    pos.x *= uScale + (sin(pos.y * 4.0 + time) * (1.0 - uScale));\\n    pos.y *= uScale + (cos(pos.z * 4.0 + time) * (1.0 - uScale));\\n    pos.z *= uScale + (sin(pos.x * 4.0 + time) * (1.0 - uScale));\\n\\n    pos *= uScale;\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = 8.0 / -mvPosition.z;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shader/vertexShader.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shader/vertexShader.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shader/vertexShader.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shader/vertexShader.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shader/vertexShader.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":781},"source":"shader/vertexShader.glsl","original":{"line":1,"column":0}}],"sources":{"shader/vertexShader.glsl":"module.exports=\"#define GLSLIFY 1\\n// attribute vec3 position;\\nattribute vec3 aRandom;\\n\\nvarying vec3 vPosition;\\n\\nuniform float uTime;\\nuniform float uScale;\\n\\nvoid main() {\\n    vPosition = position;\\n\\n    float time = uTime * 4.0;\\n\\n    vec3 pos = position;\\n    pos.x += sin(time * aRandom.x) * 0.01;\\n    pos.y += cos(time * aRandom.y) * 0.01;\\n    pos.z += cos(time * aRandom.z) * 0.01;\\n\\n    pos.x *= uScale + (sin(pos.y * 4.0 + time) * (1.0 - uScale));\\n    pos.y *= uScale + (cos(pos.z * 4.0 + time) * (1.0 - uScale));\\n    pos.z *= uScale + (sin(pos.x * 4.0 + time) * (1.0 - uScale));\\n\\n    pos *= uScale;\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n    gl_PointSize = 8.0 / -mvPosition.z;\\n}\";"},"lineCount":null}},"error":null,"hash":"8c1c3ee4a8fd826d2cf0f2e1baae9502","cacheData":{"env":{}}}